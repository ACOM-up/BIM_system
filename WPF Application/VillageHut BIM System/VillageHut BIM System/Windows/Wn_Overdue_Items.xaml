<Window x:Class="VillageHut_BIM_System.Windows.Wn_Overdue_Items"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:VillageHut_BIM_System.Windows"
        mc:Ignorable="d"
        Title="Overdue Items" Height="540" Width="960"
        ResizeMode="NoResize" WindowStyle="None"
        WindowStartupLocation="CenterScreen">



    <Border BorderThickness="0 0 1 1" BorderBrush="#FF854E4B">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition></ColumnDefinition>
                <ColumnDefinition></ColumnDefinition>
                <ColumnDefinition Width="0.5*"></ColumnDefinition>
                <ColumnDefinition Width="0.4*"></ColumnDefinition>
            </Grid.ColumnDefinitions>

            <Grid.RowDefinitions>
                <RowDefinition Height="1*"></RowDefinition>
                <RowDefinition Height="15*"></RowDefinition>
                <RowDefinition Height="1*"></RowDefinition>
                <RowDefinition Height="2*"></RowDefinition>

            </Grid.RowDefinitions>

            <Grid Grid.Column="0" Grid.ColumnSpan="4" Grid.Row="0">
                <Grid.Background>
                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                        <GradientStop Color="#FF854E4B" Offset="0"/>
                        <GradientStop Color="#FF8D5E5B" Offset="1"/>
                    </LinearGradientBrush>
                </Grid.Background>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="10*"></ColumnDefinition>
                    <ColumnDefinition Width="*"></ColumnDefinition>
                </Grid.ColumnDefinitions>
                <!-- Drag move Empty grid -->
                <Grid MouseLeftButtonDown="Grid_MouseLeftButtonDown" Grid.Column="0">
                    <TextBlock Text="Overdue Items" VerticalAlignment="Center" Margin="10 0" Foreground="#EEE"></TextBlock>
                </Grid>
                <!-- -->
                <StackPanel Grid.Column="0" Grid.ColumnSpan="2" Orientation="Horizontal" HorizontalAlignment="Right">
                    <TextBlock x:Name="btnMinimize" MouseLeftButtonUp="btnMinimize_MouseLeftButtonUp" Foreground="#EEE" Text="_" FontSize="25" FontStretch="ExtraExpanded" Width="20" HorizontalAlignment="Right" VerticalAlignment="Top" Margin="10,-10,10,0" FontFamily="Microsoft Sans Serif" FontWeight="Bold"/>
                    <TextBlock x:Name="btnClose" MouseLeftButtonUp="btnClose_MouseLeftButtonUp" Foreground="#EEE" Text="X" FontSize="25" FontStretch="ExtraExpanded" Width="20" HorizontalAlignment="Right" VerticalAlignment="Center" Margin="10,0,10,0" FontFamily="Microsoft Sans Serif" FontWeight="Bold"/>
                </StackPanel>
            </Grid>

            <Button Margin="200 12 0 10" x:Name="btnPrintOverD" Click="btnPrintOverD_Click_1" Content="Print Records" Grid.Column="1" Grid.Row="4" Foreground="#EEE">
                <Button.Style>
                    <Style TargetType="{x:Type Button}">
                        <Setter Property="OverridesDefaultStyle" Value="True"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="Button">
                                    <Border Name="Background" CornerRadius='3' BorderThickness="0 0 0 0" BorderBrush="Transparent" Background="{TemplateBinding Background}">
                                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter TargetName="Background" Property="Background" >
                                                <Setter.Value>
                                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                        <GradientStop Color="#FF4E9EEE" Offset="0"/>
                                                        <GradientStop Color="#FF82A5C9" Offset="1"/>
                                                    </LinearGradientBrush>
                                                </Setter.Value>
                                            </Setter>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </Button.Style>

                <Button.Background>
                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                        <GradientStop Color="#FF3593F2" Offset="0"/>
                        <GradientStop Color="#FF81ABD5" Offset="1"/>
                    </LinearGradientBrush>
                </Button.Background>
            </Button>


            <Button x:Name="btnODMarkAsRet" Click="btnODMarkAsRet_Click_1" Margin="25 12 0 10" Content="Mark as Returned" Grid.Column="2" Grid.Row="4" Foreground="#EEE">
                <Button.Style>
                    <Style TargetType="{x:Type Button}">
                        <Setter Property="OverridesDefaultStyle" Value="True"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="Button">
                                    <Border Name="Background" CornerRadius='3' BorderThickness="0 0 0 0" BorderBrush="Transparent" Background="{TemplateBinding Background}">
                                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter TargetName="Background" Property="Background" >
                                                <Setter.Value>
                                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                        <GradientStop Color="#FF8D5D5A" Offset="0"/>
                                                        <GradientStop Color="#FF976764" Offset="1"/>
                                                    </LinearGradientBrush>
                                                </Setter.Value>
                                            </Setter>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </Button.Style>

                <Button.Background>
                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                        <GradientStop Color="#FF854E4B" Offset="0"/>
                        <GradientStop Color="#FF8D5E5B" Offset="1"/>
                    </LinearGradientBrush>
                </Button.Background>
            </Button>

            <Button x:Name="btnCancel" Click='btnCancel_Click' Margin="25 12 10 10" Content="Cancel" Grid.Column="3" Grid.Row="4" Foreground="#EEE">
                <Button.Style>
                    <Style TargetType="{x:Type Button}">
                        <Setter Property="OverridesDefaultStyle" Value="True"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="Button">
                                    <Border Name="Background" CornerRadius='3' BorderThickness="0 0 0 0" BorderBrush="Transparent" Background="{TemplateBinding Background}">
                                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter TargetName="Background" Property="Background" >
                                                <Setter.Value>
                                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                        <GradientStop Color="#FF858585" Offset="0"/>
                                                        <GradientStop Color="#FFA4A4A4" Offset="1"/>
                                                    </LinearGradientBrush>
                                                </Setter.Value>
                                            </Setter>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </Button.Style>

                <Button.Background>
                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                        <GradientStop Color="#FF707070" Offset="0"/>
                        <GradientStop Color="#FF7E7E7E" Offset="1"/>
                    </LinearGradientBrush>
                </Button.Background>
            </Button>

            <Grid Margin="10 0 10 10" Background="#DDD" Grid.Column="0" Grid.Row="3">
                <TextBox LostFocus="txtOverdueSearch_LostFocus" GotFocus="txtOverdueSearch_GotFocus" KeyUp="txtOverdueSearch_KeyUp" VerticalContentAlignment="Center" x:Name="txtOverdueSearch" Text="Type here to search..." Margin="6" Padding="5 0"></TextBox>
            </Grid>

            <TextBlock x:Name="lblNoOfRecords" Text="1 Record Found" Grid.Column="0" Grid.Row="2" Margin="10 -5 0 0" FontSize="13"></TextBlock>

            <DataGrid CanUserAddRows="False" RowHeaderWidth="0" HorizontalGridLinesBrush="#DDD" VerticalGridLinesBrush="#DDD" Margin="10" AutoGenerateColumns="False" HorizontalContentAlignment="Center" ItemsSource="{Binding Service}" x:Name="dgOverdue" Grid.Column="0" Grid.ColumnSpan="4" Grid.Row="1" CanUserReorderColumns="False" CanUserResizeColumns="True" CanUserResizeRows="False" CanUserSortColumns="True">

                <!-- Overriding the selected cell border color -->
                <DataGrid.CellStyle>
                    <Style TargetType="{x:Type DataGridCell}">
                        <Style.Triggers>
                            <Trigger Property="IsKeyboardFocusWithin" Value="True">
                                <Setter Property="BorderBrush" Value="#DDD"/>
                                <Setter Property="BorderThickness" Value="0"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </DataGrid.CellStyle>

                <!-- Overriding the default colors -->
                <DataGrid.Resources>
                    <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="#DDD"/>
                    <SolidColorBrush x:Key="{x:Static SystemColors.ControlBrushKey}" Color="White"/>
                    <SolidColorBrush x:Key="{x:Static SystemColors.HighlightTextBrushKey}" Color="#222"/>
                    <SolidColorBrush x:Key="{x:Static SystemColors.ControlTextBrushKey}" Color="#222"/>
                    <Style BasedOn="{StaticResource {x:Type DataGridColumnHeader}}" TargetType="{x:Type DataGridColumnHeader}">
                        <Setter Property="Background" Value="#AAA" />
                        <Setter Property="BorderBrush" Value="#DDD"/>
                        <Setter Property="BorderThickness" Value="0,0,1,0"/>
                        <Setter Property="Padding" Value="10"/>
                        <Setter Property="Foreground" Value="#FFF"/>
                        <Setter Property="HorizontalContentAlignment" Value="Center"/>
                    </Style>
                </DataGrid.Resources>

                <DataGrid.Columns>
                    <DataGridTemplateColumn SortMemberPath="ssr" CanUserSort="True" Header="Service ID" Width="*" IsReadOnly="True">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock Padding="10" HorizontalAlignment="Center" Text="{Binding Path=serId}"></TextBlock>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>

                    <DataGridTemplateColumn SortMemberPath="transId" CanUserSort="True" Header="Transaction ID" Width="*" IsReadOnly="True">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock Padding="10" HorizontalAlignment="Center" Text="{Binding Path=transId}"></TextBlock>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>


                    <DataGridTemplateColumn SortMemberPath="serName" CanUserSort="True" Header="Service Name" Width="*" IsReadOnly="True">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock Padding="10" HorizontalAlignment="Center" Text="{Binding Path=serName}"></TextBlock>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>

                    <DataGridTemplateColumn SortMemberPath="dueDate" CanUserSort="True" Header="Due Date" Width="*" IsReadOnly="True">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock Padding="10" HorizontalAlignment="Center" Text="{Binding Path=dueDate}"></TextBlock>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>

                    <DataGridTemplateColumn SortMemberPath="qty" CanUserSort="True" Header="Quantity" Width="*" IsReadOnly="True">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock Padding="10" HorizontalAlignment="Center" Text="{Binding Path=qty}"></TextBlock>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>

                    <DataGridTemplateColumn SortMemberPath="cusName" CanUserSort="True" Header="Customer Name" Width="*" IsReadOnly="True">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock Padding="10" HorizontalAlignment="Center" Text="{Binding Path=cusName}"></TextBlock>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>

                    <DataGridTemplateColumn SortMemberPath="cusNIC" CanUserSort="True" Header="Customer NIC" Width="*" IsReadOnly="True">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock Padding="10" HorizontalAlignment="Center" Text="{Binding Path=cusNIC}"></TextBlock>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>

                </DataGrid.Columns>
            </DataGrid>

        </Grid>
    </Border>
</Window>
