#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace VillageHut_web_service
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="BIM_System")]
	public partial class databaseCacheDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void Inserttbl_message(tbl_message instance);
    partial void Updatetbl_message(tbl_message instance);
    partial void Deletetbl_message(tbl_message instance);
    partial void Inserttbl_employee(tbl_employee instance);
    partial void Updatetbl_employee(tbl_employee instance);
    partial void Deletetbl_employee(tbl_employee instance);
    partial void Inserttbl_credential(tbl_credential instance);
    partial void Updatetbl_credential(tbl_credential instance);
    partial void Deletetbl_credential(tbl_credential instance);
    partial void Inserttbl_employeeDetial(tbl_employeeDetial instance);
    partial void Updatetbl_employeeDetial(tbl_employeeDetial instance);
    partial void Deletetbl_employeeDetial(tbl_employeeDetial instance);
    partial void Inserttbl_customer(tbl_customer instance);
    partial void Updatetbl_customer(tbl_customer instance);
    partial void Deletetbl_customer(tbl_customer instance);
    partial void Inserttbl_category(tbl_category instance);
    partial void Updatetbl_category(tbl_category instance);
    partial void Deletetbl_category(tbl_category instance);
    partial void Inserttbl_type(tbl_type instance);
    partial void Updatetbl_type(tbl_type instance);
    partial void Deletetbl_type(tbl_type instance);
    partial void Inserttbl_service(tbl_service instance);
    partial void Updatetbl_service(tbl_service instance);
    partial void Deletetbl_service(tbl_service instance);
    partial void Inserttbl_cart(tbl_cart instance);
    partial void Updatetbl_cart(tbl_cart instance);
    partial void Deletetbl_cart(tbl_cart instance);
    partial void Inserttbl_transaction(tbl_transaction instance);
    partial void Updatetbl_transaction(tbl_transaction instance);
    partial void Deletetbl_transaction(tbl_transaction instance);
    #endregion
		
		public databaseCacheDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["BIM_SystemConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public databaseCacheDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public databaseCacheDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public databaseCacheDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public databaseCacheDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<tbl_message> tbl_messages
		{
			get
			{
				return this.GetTable<tbl_message>();
			}
		}
		
		public System.Data.Linq.Table<tbl_employee> tbl_employees
		{
			get
			{
				return this.GetTable<tbl_employee>();
			}
		}
		
		public System.Data.Linq.Table<tbl_credential> tbl_credentials
		{
			get
			{
				return this.GetTable<tbl_credential>();
			}
		}
		
		public System.Data.Linq.Table<tbl_employeeDetial> tbl_employeeDetials
		{
			get
			{
				return this.GetTable<tbl_employeeDetial>();
			}
		}
		
		public System.Data.Linq.Table<tbl_customer> tbl_customers
		{
			get
			{
				return this.GetTable<tbl_customer>();
			}
		}
		
		public System.Data.Linq.Table<tbl_category> tbl_categories
		{
			get
			{
				return this.GetTable<tbl_category>();
			}
		}
		
		public System.Data.Linq.Table<tbl_type> tbl_types
		{
			get
			{
				return this.GetTable<tbl_type>();
			}
		}
		
		public System.Data.Linq.Table<tbl_service> tbl_services
		{
			get
			{
				return this.GetTable<tbl_service>();
			}
		}
		
		public System.Data.Linq.Table<tbl_cart> tbl_carts
		{
			get
			{
				return this.GetTable<tbl_cart>();
			}
		}
		
		public System.Data.Linq.Table<tbl_transaction> tbl_transactions
		{
			get
			{
				return this.GetTable<tbl_transaction>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.proc_retrieveTransYears")]
		public ISingleResult<proc_retrieveTransYearsResult> proc_retrieveTransYears()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<proc_retrieveTransYearsResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.proc_retrieveCusNIC")]
		public ISingleResult<proc_retrieveCusNICResult> proc_retrieveCusNIC()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<proc_retrieveCusNICResult>)(result.ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbl_messages")]
	public partial class tbl_message : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _msgId;
		
		private System.Nullable<System.DateTime> _msgDate;
		
		private System.Nullable<System.DateTime> _msgExpDate;
		
		private string _msgContent;
		
		private string _msgIsDone;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnmsgIdChanging(int value);
    partial void OnmsgIdChanged();
    partial void OnmsgDateChanging(System.Nullable<System.DateTime> value);
    partial void OnmsgDateChanged();
    partial void OnmsgExpDateChanging(System.Nullable<System.DateTime> value);
    partial void OnmsgExpDateChanged();
    partial void OnmsgContentChanging(string value);
    partial void OnmsgContentChanged();
    partial void OnmsgIsDoneChanging(string value);
    partial void OnmsgIsDoneChanged();
    #endregion
		
		public tbl_message()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_msgId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int msgId
		{
			get
			{
				return this._msgId;
			}
			set
			{
				if ((this._msgId != value))
				{
					this.OnmsgIdChanging(value);
					this.SendPropertyChanging();
					this._msgId = value;
					this.SendPropertyChanged("msgId");
					this.OnmsgIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_msgDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> msgDate
		{
			get
			{
				return this._msgDate;
			}
			set
			{
				if ((this._msgDate != value))
				{
					this.OnmsgDateChanging(value);
					this.SendPropertyChanging();
					this._msgDate = value;
					this.SendPropertyChanged("msgDate");
					this.OnmsgDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_msgExpDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> msgExpDate
		{
			get
			{
				return this._msgExpDate;
			}
			set
			{
				if ((this._msgExpDate != value))
				{
					this.OnmsgExpDateChanging(value);
					this.SendPropertyChanging();
					this._msgExpDate = value;
					this.SendPropertyChanged("msgExpDate");
					this.OnmsgExpDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_msgContent", DbType="VarChar(MAX)")]
		public string msgContent
		{
			get
			{
				return this._msgContent;
			}
			set
			{
				if ((this._msgContent != value))
				{
					this.OnmsgContentChanging(value);
					this.SendPropertyChanging();
					this._msgContent = value;
					this.SendPropertyChanged("msgContent");
					this.OnmsgContentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_msgIsDone", DbType="VarChar(10)")]
		public string msgIsDone
		{
			get
			{
				return this._msgIsDone;
			}
			set
			{
				if ((this._msgIsDone != value))
				{
					this.OnmsgIsDoneChanging(value);
					this.SendPropertyChanging();
					this._msgIsDone = value;
					this.SendPropertyChanged("msgIsDone");
					this.OnmsgIsDoneChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbl_employees")]
	public partial class tbl_employee : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _emId;
		
		private string _emNIC;
		
		private string _emName;
		
		private string _emIsDeleted;
		
		private int _emAutoId;
		
		private EntityRef<tbl_credential> _tbl_credential;
		
		private EntityRef<tbl_employeeDetial> _tbl_employeeDetial;
		
		private EntitySet<tbl_transaction> _tbl_transactions;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnemIdChanging(string value);
    partial void OnemIdChanged();
    partial void OnemNICChanging(string value);
    partial void OnemNICChanged();
    partial void OnemNameChanging(string value);
    partial void OnemNameChanged();
    partial void OnemIsDeletedChanging(string value);
    partial void OnemIsDeletedChanged();
    partial void OnemAutoIdChanging(int value);
    partial void OnemAutoIdChanged();
    #endregion
		
		public tbl_employee()
		{
			this._tbl_credential = default(EntityRef<tbl_credential>);
			this._tbl_employeeDetial = default(EntityRef<tbl_employeeDetial>);
			this._tbl_transactions = new EntitySet<tbl_transaction>(new Action<tbl_transaction>(this.attach_tbl_transactions), new Action<tbl_transaction>(this.detach_tbl_transactions));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_emId", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string emId
		{
			get
			{
				return this._emId;
			}
			set
			{
				if ((this._emId != value))
				{
					this.OnemIdChanging(value);
					this.SendPropertyChanging();
					this._emId = value;
					this.SendPropertyChanged("emId");
					this.OnemIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_emNIC", DbType="VarChar(15)")]
		public string emNIC
		{
			get
			{
				return this._emNIC;
			}
			set
			{
				if ((this._emNIC != value))
				{
					this.OnemNICChanging(value);
					this.SendPropertyChanging();
					this._emNIC = value;
					this.SendPropertyChanged("emNIC");
					this.OnemNICChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_emName", DbType="VarChar(50)")]
		public string emName
		{
			get
			{
				return this._emName;
			}
			set
			{
				if ((this._emName != value))
				{
					this.OnemNameChanging(value);
					this.SendPropertyChanging();
					this._emName = value;
					this.SendPropertyChanged("emName");
					this.OnemNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_emIsDeleted", DbType="VarChar(10)")]
		public string emIsDeleted
		{
			get
			{
				return this._emIsDeleted;
			}
			set
			{
				if ((this._emIsDeleted != value))
				{
					this.OnemIsDeletedChanging(value);
					this.SendPropertyChanging();
					this._emIsDeleted = value;
					this.SendPropertyChanged("emIsDeleted");
					this.OnemIsDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_emAutoId", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int emAutoId
		{
			get
			{
				return this._emAutoId;
			}
			set
			{
				if ((this._emAutoId != value))
				{
					this.OnemAutoIdChanging(value);
					this.SendPropertyChanging();
					this._emAutoId = value;
					this.SendPropertyChanged("emAutoId");
					this.OnemAutoIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_employee_tbl_credential", Storage="_tbl_credential", ThisKey="emId", OtherKey="emId", IsUnique=true, IsForeignKey=false)]
		public tbl_credential tbl_credential
		{
			get
			{
				return this._tbl_credential.Entity;
			}
			set
			{
				tbl_credential previousValue = this._tbl_credential.Entity;
				if (((previousValue != value) 
							|| (this._tbl_credential.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbl_credential.Entity = null;
						previousValue.tbl_employee = null;
					}
					this._tbl_credential.Entity = value;
					if ((value != null))
					{
						value.tbl_employee = this;
					}
					this.SendPropertyChanged("tbl_credential");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_employee_tbl_employeeDetial", Storage="_tbl_employeeDetial", ThisKey="emId", OtherKey="emId", IsUnique=true, IsForeignKey=false)]
		public tbl_employeeDetial tbl_employeeDetial
		{
			get
			{
				return this._tbl_employeeDetial.Entity;
			}
			set
			{
				tbl_employeeDetial previousValue = this._tbl_employeeDetial.Entity;
				if (((previousValue != value) 
							|| (this._tbl_employeeDetial.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbl_employeeDetial.Entity = null;
						previousValue.tbl_employee = null;
					}
					this._tbl_employeeDetial.Entity = value;
					if ((value != null))
					{
						value.tbl_employee = this;
					}
					this.SendPropertyChanged("tbl_employeeDetial");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_employee_tbl_transaction", Storage="_tbl_transactions", ThisKey="emId", OtherKey="emId")]
		public EntitySet<tbl_transaction> tbl_transactions
		{
			get
			{
				return this._tbl_transactions;
			}
			set
			{
				this._tbl_transactions.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tbl_transactions(tbl_transaction entity)
		{
			this.SendPropertyChanging();
			entity.tbl_employee = this;
		}
		
		private void detach_tbl_transactions(tbl_transaction entity)
		{
			this.SendPropertyChanging();
			entity.tbl_employee = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbl_credentials")]
	public partial class tbl_credential : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _emId;
		
		private string _credUsername;
		
		private string _credPassword;
		
		private string _credAccess;
		
		private EntityRef<tbl_employee> _tbl_employee;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnemIdChanging(string value);
    partial void OnemIdChanged();
    partial void OncredUsernameChanging(string value);
    partial void OncredUsernameChanged();
    partial void OncredPasswordChanging(string value);
    partial void OncredPasswordChanged();
    partial void OncredAccessChanging(string value);
    partial void OncredAccessChanged();
    #endregion
		
		public tbl_credential()
		{
			this._tbl_employee = default(EntityRef<tbl_employee>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_emId", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string emId
		{
			get
			{
				return this._emId;
			}
			set
			{
				if ((this._emId != value))
				{
					if (this._tbl_employee.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnemIdChanging(value);
					this.SendPropertyChanging();
					this._emId = value;
					this.SendPropertyChanged("emId");
					this.OnemIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_credUsername", DbType="VarChar(50)")]
		public string credUsername
		{
			get
			{
				return this._credUsername;
			}
			set
			{
				if ((this._credUsername != value))
				{
					this.OncredUsernameChanging(value);
					this.SendPropertyChanging();
					this._credUsername = value;
					this.SendPropertyChanged("credUsername");
					this.OncredUsernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_credPassword", DbType="VarChar(MAX)")]
		public string credPassword
		{
			get
			{
				return this._credPassword;
			}
			set
			{
				if ((this._credPassword != value))
				{
					this.OncredPasswordChanging(value);
					this.SendPropertyChanging();
					this._credPassword = value;
					this.SendPropertyChanged("credPassword");
					this.OncredPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_credAccess", DbType="VarChar(20)")]
		public string credAccess
		{
			get
			{
				return this._credAccess;
			}
			set
			{
				if ((this._credAccess != value))
				{
					this.OncredAccessChanging(value);
					this.SendPropertyChanging();
					this._credAccess = value;
					this.SendPropertyChanged("credAccess");
					this.OncredAccessChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_employee_tbl_credential", Storage="_tbl_employee", ThisKey="emId", OtherKey="emId", IsForeignKey=true)]
		public tbl_employee tbl_employee
		{
			get
			{
				return this._tbl_employee.Entity;
			}
			set
			{
				tbl_employee previousValue = this._tbl_employee.Entity;
				if (((previousValue != value) 
							|| (this._tbl_employee.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbl_employee.Entity = null;
						previousValue.tbl_credential = null;
					}
					this._tbl_employee.Entity = value;
					if ((value != null))
					{
						value.tbl_credential = this;
						this._emId = value.emId;
					}
					else
					{
						this._emId = default(string);
					}
					this.SendPropertyChanged("tbl_employee");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbl_employeeDetials")]
	public partial class tbl_employeeDetial : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _emId;
		
		private string _emdAddress;
		
		private string _emdPhone;
		
		private System.Nullable<double> _emdSalery;
		
		private EntityRef<tbl_employee> _tbl_employee;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnemIdChanging(string value);
    partial void OnemIdChanged();
    partial void OnemdAddressChanging(string value);
    partial void OnemdAddressChanged();
    partial void OnemdPhoneChanging(string value);
    partial void OnemdPhoneChanged();
    partial void OnemdSaleryChanging(System.Nullable<double> value);
    partial void OnemdSaleryChanged();
    #endregion
		
		public tbl_employeeDetial()
		{
			this._tbl_employee = default(EntityRef<tbl_employee>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_emId", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string emId
		{
			get
			{
				return this._emId;
			}
			set
			{
				if ((this._emId != value))
				{
					if (this._tbl_employee.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnemIdChanging(value);
					this.SendPropertyChanging();
					this._emId = value;
					this.SendPropertyChanged("emId");
					this.OnemIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_emdAddress", DbType="VarChar(MAX)")]
		public string emdAddress
		{
			get
			{
				return this._emdAddress;
			}
			set
			{
				if ((this._emdAddress != value))
				{
					this.OnemdAddressChanging(value);
					this.SendPropertyChanging();
					this._emdAddress = value;
					this.SendPropertyChanged("emdAddress");
					this.OnemdAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_emdPhone", DbType="VarChar(20)")]
		public string emdPhone
		{
			get
			{
				return this._emdPhone;
			}
			set
			{
				if ((this._emdPhone != value))
				{
					this.OnemdPhoneChanging(value);
					this.SendPropertyChanging();
					this._emdPhone = value;
					this.SendPropertyChanged("emdPhone");
					this.OnemdPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_emdSalery", DbType="Float")]
		public System.Nullable<double> emdSalery
		{
			get
			{
				return this._emdSalery;
			}
			set
			{
				if ((this._emdSalery != value))
				{
					this.OnemdSaleryChanging(value);
					this.SendPropertyChanging();
					this._emdSalery = value;
					this.SendPropertyChanged("emdSalery");
					this.OnemdSaleryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_employee_tbl_employeeDetial", Storage="_tbl_employee", ThisKey="emId", OtherKey="emId", IsForeignKey=true)]
		public tbl_employee tbl_employee
		{
			get
			{
				return this._tbl_employee.Entity;
			}
			set
			{
				tbl_employee previousValue = this._tbl_employee.Entity;
				if (((previousValue != value) 
							|| (this._tbl_employee.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbl_employee.Entity = null;
						previousValue.tbl_employeeDetial = null;
					}
					this._tbl_employee.Entity = value;
					if ((value != null))
					{
						value.tbl_employeeDetial = this;
						this._emId = value.emId;
					}
					else
					{
						this._emId = default(string);
					}
					this.SendPropertyChanged("tbl_employee");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbl_customers")]
	public partial class tbl_customer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _cusId;
		
		private string _cusNIC;
		
		private string _cusName;
		
		private string _cusAddress;
		
		private string _cusPhone;
		
		private string _cusIsDeleted;
		
		private int _cusAutoId;
		
		private EntitySet<tbl_transaction> _tbl_transactions;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OncusIdChanging(string value);
    partial void OncusIdChanged();
    partial void OncusNICChanging(string value);
    partial void OncusNICChanged();
    partial void OncusNameChanging(string value);
    partial void OncusNameChanged();
    partial void OncusAddressChanging(string value);
    partial void OncusAddressChanged();
    partial void OncusPhoneChanging(string value);
    partial void OncusPhoneChanged();
    partial void OncusIsDeletedChanging(string value);
    partial void OncusIsDeletedChanged();
    partial void OncusAutoIdChanging(int value);
    partial void OncusAutoIdChanged();
    #endregion
		
		public tbl_customer()
		{
			this._tbl_transactions = new EntitySet<tbl_transaction>(new Action<tbl_transaction>(this.attach_tbl_transactions), new Action<tbl_transaction>(this.detach_tbl_transactions));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cusId", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string cusId
		{
			get
			{
				return this._cusId;
			}
			set
			{
				if ((this._cusId != value))
				{
					this.OncusIdChanging(value);
					this.SendPropertyChanging();
					this._cusId = value;
					this.SendPropertyChanged("cusId");
					this.OncusIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cusNIC", DbType="VarChar(15)")]
		public string cusNIC
		{
			get
			{
				return this._cusNIC;
			}
			set
			{
				if ((this._cusNIC != value))
				{
					this.OncusNICChanging(value);
					this.SendPropertyChanging();
					this._cusNIC = value;
					this.SendPropertyChanged("cusNIC");
					this.OncusNICChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cusName", DbType="VarChar(50)")]
		public string cusName
		{
			get
			{
				return this._cusName;
			}
			set
			{
				if ((this._cusName != value))
				{
					this.OncusNameChanging(value);
					this.SendPropertyChanging();
					this._cusName = value;
					this.SendPropertyChanged("cusName");
					this.OncusNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cusAddress", DbType="VarChar(100)")]
		public string cusAddress
		{
			get
			{
				return this._cusAddress;
			}
			set
			{
				if ((this._cusAddress != value))
				{
					this.OncusAddressChanging(value);
					this.SendPropertyChanging();
					this._cusAddress = value;
					this.SendPropertyChanged("cusAddress");
					this.OncusAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cusPhone", DbType="VarChar(20)")]
		public string cusPhone
		{
			get
			{
				return this._cusPhone;
			}
			set
			{
				if ((this._cusPhone != value))
				{
					this.OncusPhoneChanging(value);
					this.SendPropertyChanging();
					this._cusPhone = value;
					this.SendPropertyChanged("cusPhone");
					this.OncusPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cusIsDeleted", DbType="VarChar(10)")]
		public string cusIsDeleted
		{
			get
			{
				return this._cusIsDeleted;
			}
			set
			{
				if ((this._cusIsDeleted != value))
				{
					this.OncusIsDeletedChanging(value);
					this.SendPropertyChanging();
					this._cusIsDeleted = value;
					this.SendPropertyChanged("cusIsDeleted");
					this.OncusIsDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cusAutoId", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int cusAutoId
		{
			get
			{
				return this._cusAutoId;
			}
			set
			{
				if ((this._cusAutoId != value))
				{
					this.OncusAutoIdChanging(value);
					this.SendPropertyChanging();
					this._cusAutoId = value;
					this.SendPropertyChanged("cusAutoId");
					this.OncusAutoIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_customer_tbl_transaction", Storage="_tbl_transactions", ThisKey="cusId", OtherKey="cusId")]
		public EntitySet<tbl_transaction> tbl_transactions
		{
			get
			{
				return this._tbl_transactions;
			}
			set
			{
				this._tbl_transactions.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tbl_transactions(tbl_transaction entity)
		{
			this.SendPropertyChanging();
			entity.tbl_customer = this;
		}
		
		private void detach_tbl_transactions(tbl_transaction entity)
		{
			this.SendPropertyChanging();
			entity.tbl_customer = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbl_categories")]
	public partial class tbl_category : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _catId;
		
		private string _catName;
		
		private string _catSerIsItem;
		
		private EntitySet<tbl_service> _tbl_services;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OncatIdChanging(string value);
    partial void OncatIdChanged();
    partial void OncatNameChanging(string value);
    partial void OncatNameChanged();
    partial void OncatSerIsItemChanging(string value);
    partial void OncatSerIsItemChanged();
    #endregion
		
		public tbl_category()
		{
			this._tbl_services = new EntitySet<tbl_service>(new Action<tbl_service>(this.attach_tbl_services), new Action<tbl_service>(this.detach_tbl_services));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_catId", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string catId
		{
			get
			{
				return this._catId;
			}
			set
			{
				if ((this._catId != value))
				{
					this.OncatIdChanging(value);
					this.SendPropertyChanging();
					this._catId = value;
					this.SendPropertyChanged("catId");
					this.OncatIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_catName", DbType="VarChar(50)")]
		public string catName
		{
			get
			{
				return this._catName;
			}
			set
			{
				if ((this._catName != value))
				{
					this.OncatNameChanging(value);
					this.SendPropertyChanging();
					this._catName = value;
					this.SendPropertyChanged("catName");
					this.OncatNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_catSerIsItem", DbType="VarChar(10)")]
		public string catSerIsItem
		{
			get
			{
				return this._catSerIsItem;
			}
			set
			{
				if ((this._catSerIsItem != value))
				{
					this.OncatSerIsItemChanging(value);
					this.SendPropertyChanging();
					this._catSerIsItem = value;
					this.SendPropertyChanged("catSerIsItem");
					this.OncatSerIsItemChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_category_tbl_service", Storage="_tbl_services", ThisKey="catId", OtherKey="catId")]
		public EntitySet<tbl_service> tbl_services
		{
			get
			{
				return this._tbl_services;
			}
			set
			{
				this._tbl_services.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tbl_services(tbl_service entity)
		{
			this.SendPropertyChanging();
			entity.tbl_category = this;
		}
		
		private void detach_tbl_services(tbl_service entity)
		{
			this.SendPropertyChanging();
			entity.tbl_category = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbl_types")]
	public partial class tbl_type : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _typeId;
		
		private string _serId;
		
		private string _typeName;
		
		private System.Nullable<double> _typePricePService;
		
		private System.Nullable<int> _typeAvailableQty;
		
		private System.Nullable<int> _typeMaxQty;
		
		private EntityRef<tbl_service> _tbl_service;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OntypeIdChanging(int value);
    partial void OntypeIdChanged();
    partial void OnserIdChanging(string value);
    partial void OnserIdChanged();
    partial void OntypeNameChanging(string value);
    partial void OntypeNameChanged();
    partial void OntypePricePServiceChanging(System.Nullable<double> value);
    partial void OntypePricePServiceChanged();
    partial void OntypeAvailableQtyChanging(System.Nullable<int> value);
    partial void OntypeAvailableQtyChanged();
    partial void OntypeMaxQtyChanging(System.Nullable<int> value);
    partial void OntypeMaxQtyChanged();
    #endregion
		
		public tbl_type()
		{
			this._tbl_service = default(EntityRef<tbl_service>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_typeId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int typeId
		{
			get
			{
				return this._typeId;
			}
			set
			{
				if ((this._typeId != value))
				{
					this.OntypeIdChanging(value);
					this.SendPropertyChanging();
					this._typeId = value;
					this.SendPropertyChanged("typeId");
					this.OntypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_serId", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string serId
		{
			get
			{
				return this._serId;
			}
			set
			{
				if ((this._serId != value))
				{
					if (this._tbl_service.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnserIdChanging(value);
					this.SendPropertyChanging();
					this._serId = value;
					this.SendPropertyChanged("serId");
					this.OnserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_typeName", DbType="VarChar(50)")]
		public string typeName
		{
			get
			{
				return this._typeName;
			}
			set
			{
				if ((this._typeName != value))
				{
					this.OntypeNameChanging(value);
					this.SendPropertyChanging();
					this._typeName = value;
					this.SendPropertyChanged("typeName");
					this.OntypeNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_typePricePService", DbType="Float")]
		public System.Nullable<double> typePricePService
		{
			get
			{
				return this._typePricePService;
			}
			set
			{
				if ((this._typePricePService != value))
				{
					this.OntypePricePServiceChanging(value);
					this.SendPropertyChanging();
					this._typePricePService = value;
					this.SendPropertyChanged("typePricePService");
					this.OntypePricePServiceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_typeAvailableQty", DbType="Int")]
		public System.Nullable<int> typeAvailableQty
		{
			get
			{
				return this._typeAvailableQty;
			}
			set
			{
				if ((this._typeAvailableQty != value))
				{
					this.OntypeAvailableQtyChanging(value);
					this.SendPropertyChanging();
					this._typeAvailableQty = value;
					this.SendPropertyChanged("typeAvailableQty");
					this.OntypeAvailableQtyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_typeMaxQty", DbType="Int")]
		public System.Nullable<int> typeMaxQty
		{
			get
			{
				return this._typeMaxQty;
			}
			set
			{
				if ((this._typeMaxQty != value))
				{
					this.OntypeMaxQtyChanging(value);
					this.SendPropertyChanging();
					this._typeMaxQty = value;
					this.SendPropertyChanged("typeMaxQty");
					this.OntypeMaxQtyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_service_tbl_type", Storage="_tbl_service", ThisKey="serId", OtherKey="serId", IsForeignKey=true)]
		public tbl_service tbl_service
		{
			get
			{
				return this._tbl_service.Entity;
			}
			set
			{
				tbl_service previousValue = this._tbl_service.Entity;
				if (((previousValue != value) 
							|| (this._tbl_service.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbl_service.Entity = null;
						previousValue.tbl_types.Remove(this);
					}
					this._tbl_service.Entity = value;
					if ((value != null))
					{
						value.tbl_types.Add(this);
						this._serId = value.serId;
					}
					else
					{
						this._serId = default(string);
					}
					this.SendPropertyChanged("tbl_service");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbl_services")]
	public partial class tbl_service : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _serId;
		
		private string _catId;
		
		private string _serName;
		
		private string _serDesc;
		
		private string _serImg;
		
		private string _serIsDeleted;
		
		private int _serAutoId;
		
		private EntitySet<tbl_type> _tbl_types;
		
		private EntitySet<tbl_cart> _tbl_carts;
		
		private EntityRef<tbl_category> _tbl_category;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnserIdChanging(string value);
    partial void OnserIdChanged();
    partial void OncatIdChanging(string value);
    partial void OncatIdChanged();
    partial void OnserNameChanging(string value);
    partial void OnserNameChanged();
    partial void OnserDescChanging(string value);
    partial void OnserDescChanged();
    partial void OnserImgChanging(string value);
    partial void OnserImgChanged();
    partial void OnserIsDeletedChanging(string value);
    partial void OnserIsDeletedChanged();
    partial void OnserAutoIdChanging(int value);
    partial void OnserAutoIdChanged();
    #endregion
		
		public tbl_service()
		{
			this._tbl_types = new EntitySet<tbl_type>(new Action<tbl_type>(this.attach_tbl_types), new Action<tbl_type>(this.detach_tbl_types));
			this._tbl_carts = new EntitySet<tbl_cart>(new Action<tbl_cart>(this.attach_tbl_carts), new Action<tbl_cart>(this.detach_tbl_carts));
			this._tbl_category = default(EntityRef<tbl_category>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_serId", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string serId
		{
			get
			{
				return this._serId;
			}
			set
			{
				if ((this._serId != value))
				{
					this.OnserIdChanging(value);
					this.SendPropertyChanging();
					this._serId = value;
					this.SendPropertyChanged("serId");
					this.OnserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_catId", DbType="VarChar(20)")]
		public string catId
		{
			get
			{
				return this._catId;
			}
			set
			{
				if ((this._catId != value))
				{
					if (this._tbl_category.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OncatIdChanging(value);
					this.SendPropertyChanging();
					this._catId = value;
					this.SendPropertyChanged("catId");
					this.OncatIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_serName", DbType="VarChar(50)")]
		public string serName
		{
			get
			{
				return this._serName;
			}
			set
			{
				if ((this._serName != value))
				{
					this.OnserNameChanging(value);
					this.SendPropertyChanging();
					this._serName = value;
					this.SendPropertyChanged("serName");
					this.OnserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_serDesc", DbType="VarChar(MAX)")]
		public string serDesc
		{
			get
			{
				return this._serDesc;
			}
			set
			{
				if ((this._serDesc != value))
				{
					this.OnserDescChanging(value);
					this.SendPropertyChanging();
					this._serDesc = value;
					this.SendPropertyChanged("serDesc");
					this.OnserDescChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_serImg", DbType="VarChar(MAX)")]
		public string serImg
		{
			get
			{
				return this._serImg;
			}
			set
			{
				if ((this._serImg != value))
				{
					this.OnserImgChanging(value);
					this.SendPropertyChanging();
					this._serImg = value;
					this.SendPropertyChanged("serImg");
					this.OnserImgChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_serIsDeleted", DbType="VarChar(10)")]
		public string serIsDeleted
		{
			get
			{
				return this._serIsDeleted;
			}
			set
			{
				if ((this._serIsDeleted != value))
				{
					this.OnserIsDeletedChanging(value);
					this.SendPropertyChanging();
					this._serIsDeleted = value;
					this.SendPropertyChanged("serIsDeleted");
					this.OnserIsDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_serAutoId", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int serAutoId
		{
			get
			{
				return this._serAutoId;
			}
			set
			{
				if ((this._serAutoId != value))
				{
					this.OnserAutoIdChanging(value);
					this.SendPropertyChanging();
					this._serAutoId = value;
					this.SendPropertyChanged("serAutoId");
					this.OnserAutoIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_service_tbl_type", Storage="_tbl_types", ThisKey="serId", OtherKey="serId")]
		public EntitySet<tbl_type> tbl_types
		{
			get
			{
				return this._tbl_types;
			}
			set
			{
				this._tbl_types.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_service_tbl_cart", Storage="_tbl_carts", ThisKey="serId", OtherKey="serId")]
		public EntitySet<tbl_cart> tbl_carts
		{
			get
			{
				return this._tbl_carts;
			}
			set
			{
				this._tbl_carts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_category_tbl_service", Storage="_tbl_category", ThisKey="catId", OtherKey="catId", IsForeignKey=true)]
		public tbl_category tbl_category
		{
			get
			{
				return this._tbl_category.Entity;
			}
			set
			{
				tbl_category previousValue = this._tbl_category.Entity;
				if (((previousValue != value) 
							|| (this._tbl_category.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbl_category.Entity = null;
						previousValue.tbl_services.Remove(this);
					}
					this._tbl_category.Entity = value;
					if ((value != null))
					{
						value.tbl_services.Add(this);
						this._catId = value.catId;
					}
					else
					{
						this._catId = default(string);
					}
					this.SendPropertyChanged("tbl_category");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tbl_types(tbl_type entity)
		{
			this.SendPropertyChanging();
			entity.tbl_service = this;
		}
		
		private void detach_tbl_types(tbl_type entity)
		{
			this.SendPropertyChanging();
			entity.tbl_service = null;
		}
		
		private void attach_tbl_carts(tbl_cart entity)
		{
			this.SendPropertyChanging();
			entity.tbl_service = this;
		}
		
		private void detach_tbl_carts(tbl_cart entity)
		{
			this.SendPropertyChanging();
			entity.tbl_service = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbl_cart")]
	public partial class tbl_cart : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _cartId;
		
		private string _transId;
		
		private string _serId;
		
		private string _cartSerType;
		
		private System.Nullable<int> _cartSerQty;
		
		private System.Nullable<System.DateTime> _cartItemReservedDate;
		
		private System.Nullable<int> _cartNoOfDays;
		
		private System.Nullable<double> _cartPricePItem;
		
		private string _cartItemIsReturned;
		
		private string _cartItemIsCancelled;
		
		private EntityRef<tbl_service> _tbl_service;
		
		private EntityRef<tbl_transaction> _tbl_transaction;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OncartIdChanging(int value);
    partial void OncartIdChanged();
    partial void OntransIdChanging(string value);
    partial void OntransIdChanged();
    partial void OnserIdChanging(string value);
    partial void OnserIdChanged();
    partial void OncartSerTypeChanging(string value);
    partial void OncartSerTypeChanged();
    partial void OncartSerQtyChanging(System.Nullable<int> value);
    partial void OncartSerQtyChanged();
    partial void OncartItemReservedDateChanging(System.Nullable<System.DateTime> value);
    partial void OncartItemReservedDateChanged();
    partial void OncartNoOfDaysChanging(System.Nullable<int> value);
    partial void OncartNoOfDaysChanged();
    partial void OncartPricePItemChanging(System.Nullable<double> value);
    partial void OncartPricePItemChanged();
    partial void OncartItemIsReturnedChanging(string value);
    partial void OncartItemIsReturnedChanged();
    partial void OncartItemIsCancelledChanging(string value);
    partial void OncartItemIsCancelledChanged();
    #endregion
		
		public tbl_cart()
		{
			this._tbl_service = default(EntityRef<tbl_service>);
			this._tbl_transaction = default(EntityRef<tbl_transaction>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cartId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int cartId
		{
			get
			{
				return this._cartId;
			}
			set
			{
				if ((this._cartId != value))
				{
					this.OncartIdChanging(value);
					this.SendPropertyChanging();
					this._cartId = value;
					this.SendPropertyChanged("cartId");
					this.OncartIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_transId", DbType="VarChar(20)")]
		public string transId
		{
			get
			{
				return this._transId;
			}
			set
			{
				if ((this._transId != value))
				{
					if (this._tbl_transaction.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OntransIdChanging(value);
					this.SendPropertyChanging();
					this._transId = value;
					this.SendPropertyChanged("transId");
					this.OntransIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_serId", DbType="VarChar(20)")]
		public string serId
		{
			get
			{
				return this._serId;
			}
			set
			{
				if ((this._serId != value))
				{
					if (this._tbl_service.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnserIdChanging(value);
					this.SendPropertyChanging();
					this._serId = value;
					this.SendPropertyChanged("serId");
					this.OnserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cartSerType", DbType="VarChar(50)")]
		public string cartSerType
		{
			get
			{
				return this._cartSerType;
			}
			set
			{
				if ((this._cartSerType != value))
				{
					this.OncartSerTypeChanging(value);
					this.SendPropertyChanging();
					this._cartSerType = value;
					this.SendPropertyChanged("cartSerType");
					this.OncartSerTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cartSerQty", DbType="Int")]
		public System.Nullable<int> cartSerQty
		{
			get
			{
				return this._cartSerQty;
			}
			set
			{
				if ((this._cartSerQty != value))
				{
					this.OncartSerQtyChanging(value);
					this.SendPropertyChanging();
					this._cartSerQty = value;
					this.SendPropertyChanged("cartSerQty");
					this.OncartSerQtyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cartItemReservedDate", DbType="Date")]
		public System.Nullable<System.DateTime> cartItemReservedDate
		{
			get
			{
				return this._cartItemReservedDate;
			}
			set
			{
				if ((this._cartItemReservedDate != value))
				{
					this.OncartItemReservedDateChanging(value);
					this.SendPropertyChanging();
					this._cartItemReservedDate = value;
					this.SendPropertyChanged("cartItemReservedDate");
					this.OncartItemReservedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cartNoOfDays", DbType="Int")]
		public System.Nullable<int> cartNoOfDays
		{
			get
			{
				return this._cartNoOfDays;
			}
			set
			{
				if ((this._cartNoOfDays != value))
				{
					this.OncartNoOfDaysChanging(value);
					this.SendPropertyChanging();
					this._cartNoOfDays = value;
					this.SendPropertyChanged("cartNoOfDays");
					this.OncartNoOfDaysChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cartPricePItem", DbType="Float")]
		public System.Nullable<double> cartPricePItem
		{
			get
			{
				return this._cartPricePItem;
			}
			set
			{
				if ((this._cartPricePItem != value))
				{
					this.OncartPricePItemChanging(value);
					this.SendPropertyChanging();
					this._cartPricePItem = value;
					this.SendPropertyChanged("cartPricePItem");
					this.OncartPricePItemChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cartItemIsReturned", DbType="VarChar(15)")]
		public string cartItemIsReturned
		{
			get
			{
				return this._cartItemIsReturned;
			}
			set
			{
				if ((this._cartItemIsReturned != value))
				{
					this.OncartItemIsReturnedChanging(value);
					this.SendPropertyChanging();
					this._cartItemIsReturned = value;
					this.SendPropertyChanged("cartItemIsReturned");
					this.OncartItemIsReturnedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cartItemIsCancelled", DbType="VarChar(15)")]
		public string cartItemIsCancelled
		{
			get
			{
				return this._cartItemIsCancelled;
			}
			set
			{
				if ((this._cartItemIsCancelled != value))
				{
					this.OncartItemIsCancelledChanging(value);
					this.SendPropertyChanging();
					this._cartItemIsCancelled = value;
					this.SendPropertyChanged("cartItemIsCancelled");
					this.OncartItemIsCancelledChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_service_tbl_cart", Storage="_tbl_service", ThisKey="serId", OtherKey="serId", IsForeignKey=true)]
		public tbl_service tbl_service
		{
			get
			{
				return this._tbl_service.Entity;
			}
			set
			{
				tbl_service previousValue = this._tbl_service.Entity;
				if (((previousValue != value) 
							|| (this._tbl_service.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbl_service.Entity = null;
						previousValue.tbl_carts.Remove(this);
					}
					this._tbl_service.Entity = value;
					if ((value != null))
					{
						value.tbl_carts.Add(this);
						this._serId = value.serId;
					}
					else
					{
						this._serId = default(string);
					}
					this.SendPropertyChanged("tbl_service");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_transaction_tbl_cart", Storage="_tbl_transaction", ThisKey="transId", OtherKey="transId", IsForeignKey=true)]
		public tbl_transaction tbl_transaction
		{
			get
			{
				return this._tbl_transaction.Entity;
			}
			set
			{
				tbl_transaction previousValue = this._tbl_transaction.Entity;
				if (((previousValue != value) 
							|| (this._tbl_transaction.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbl_transaction.Entity = null;
						previousValue.tbl_carts.Remove(this);
					}
					this._tbl_transaction.Entity = value;
					if ((value != null))
					{
						value.tbl_carts.Add(this);
						this._transId = value.transId;
					}
					else
					{
						this._transId = default(string);
					}
					this.SendPropertyChanged("tbl_transaction");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbl_transactions")]
	public partial class tbl_transaction : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _transId;
		
		private string _emId;
		
		private string _cusId;
		
		private System.Nullable<double> _transPrice;
		
		private System.Nullable<System.DateTime> _transdateTime;
		
		private string _transMonth;
		
		private int _transAutoId;
		
		private EntitySet<tbl_cart> _tbl_carts;
		
		private EntityRef<tbl_customer> _tbl_customer;
		
		private EntityRef<tbl_employee> _tbl_employee;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OntransIdChanging(string value);
    partial void OntransIdChanged();
    partial void OnemIdChanging(string value);
    partial void OnemIdChanged();
    partial void OncusIdChanging(string value);
    partial void OncusIdChanged();
    partial void OntransPriceChanging(System.Nullable<double> value);
    partial void OntransPriceChanged();
    partial void OntransdateTimeChanging(System.Nullable<System.DateTime> value);
    partial void OntransdateTimeChanged();
    partial void OntransMonthChanging(string value);
    partial void OntransMonthChanged();
    partial void OntransAutoIdChanging(int value);
    partial void OntransAutoIdChanged();
    #endregion
		
		public tbl_transaction()
		{
			this._tbl_carts = new EntitySet<tbl_cart>(new Action<tbl_cart>(this.attach_tbl_carts), new Action<tbl_cart>(this.detach_tbl_carts));
			this._tbl_customer = default(EntityRef<tbl_customer>);
			this._tbl_employee = default(EntityRef<tbl_employee>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_transId", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string transId
		{
			get
			{
				return this._transId;
			}
			set
			{
				if ((this._transId != value))
				{
					this.OntransIdChanging(value);
					this.SendPropertyChanging();
					this._transId = value;
					this.SendPropertyChanged("transId");
					this.OntransIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_emId", DbType="VarChar(20)")]
		public string emId
		{
			get
			{
				return this._emId;
			}
			set
			{
				if ((this._emId != value))
				{
					if (this._tbl_employee.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnemIdChanging(value);
					this.SendPropertyChanging();
					this._emId = value;
					this.SendPropertyChanged("emId");
					this.OnemIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cusId", DbType="VarChar(20)")]
		public string cusId
		{
			get
			{
				return this._cusId;
			}
			set
			{
				if ((this._cusId != value))
				{
					if (this._tbl_customer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OncusIdChanging(value);
					this.SendPropertyChanging();
					this._cusId = value;
					this.SendPropertyChanged("cusId");
					this.OncusIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_transPrice", DbType="Float")]
		public System.Nullable<double> transPrice
		{
			get
			{
				return this._transPrice;
			}
			set
			{
				if ((this._transPrice != value))
				{
					this.OntransPriceChanging(value);
					this.SendPropertyChanging();
					this._transPrice = value;
					this.SendPropertyChanged("transPrice");
					this.OntransPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_transdateTime", DbType="DateTime")]
		public System.Nullable<System.DateTime> transdateTime
		{
			get
			{
				return this._transdateTime;
			}
			set
			{
				if ((this._transdateTime != value))
				{
					this.OntransdateTimeChanging(value);
					this.SendPropertyChanging();
					this._transdateTime = value;
					this.SendPropertyChanged("transdateTime");
					this.OntransdateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_transMonth", DbType="VarChar(20)")]
		public string transMonth
		{
			get
			{
				return this._transMonth;
			}
			set
			{
				if ((this._transMonth != value))
				{
					this.OntransMonthChanging(value);
					this.SendPropertyChanging();
					this._transMonth = value;
					this.SendPropertyChanged("transMonth");
					this.OntransMonthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_transAutoId", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int transAutoId
		{
			get
			{
				return this._transAutoId;
			}
			set
			{
				if ((this._transAutoId != value))
				{
					this.OntransAutoIdChanging(value);
					this.SendPropertyChanging();
					this._transAutoId = value;
					this.SendPropertyChanged("transAutoId");
					this.OntransAutoIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_transaction_tbl_cart", Storage="_tbl_carts", ThisKey="transId", OtherKey="transId")]
		public EntitySet<tbl_cart> tbl_carts
		{
			get
			{
				return this._tbl_carts;
			}
			set
			{
				this._tbl_carts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_customer_tbl_transaction", Storage="_tbl_customer", ThisKey="cusId", OtherKey="cusId", IsForeignKey=true)]
		public tbl_customer tbl_customer
		{
			get
			{
				return this._tbl_customer.Entity;
			}
			set
			{
				tbl_customer previousValue = this._tbl_customer.Entity;
				if (((previousValue != value) 
							|| (this._tbl_customer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbl_customer.Entity = null;
						previousValue.tbl_transactions.Remove(this);
					}
					this._tbl_customer.Entity = value;
					if ((value != null))
					{
						value.tbl_transactions.Add(this);
						this._cusId = value.cusId;
					}
					else
					{
						this._cusId = default(string);
					}
					this.SendPropertyChanged("tbl_customer");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_employee_tbl_transaction", Storage="_tbl_employee", ThisKey="emId", OtherKey="emId", IsForeignKey=true)]
		public tbl_employee tbl_employee
		{
			get
			{
				return this._tbl_employee.Entity;
			}
			set
			{
				tbl_employee previousValue = this._tbl_employee.Entity;
				if (((previousValue != value) 
							|| (this._tbl_employee.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbl_employee.Entity = null;
						previousValue.tbl_transactions.Remove(this);
					}
					this._tbl_employee.Entity = value;
					if ((value != null))
					{
						value.tbl_transactions.Add(this);
						this._emId = value.emId;
					}
					else
					{
						this._emId = default(string);
					}
					this.SendPropertyChanged("tbl_employee");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tbl_carts(tbl_cart entity)
		{
			this.SendPropertyChanging();
			entity.tbl_transaction = this;
		}
		
		private void detach_tbl_carts(tbl_cart entity)
		{
			this.SendPropertyChanging();
			entity.tbl_transaction = null;
		}
	}
	
	public partial class proc_retrieveTransYearsResult
	{
		
		private System.Nullable<int> _Column1;
		
		public proc_retrieveTransYearsResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="", Storage="_Column1", DbType="Int")]
		public System.Nullable<int> Column1
		{
			get
			{
				return this._Column1;
			}
			set
			{
				if ((this._Column1 != value))
				{
					this._Column1 = value;
				}
			}
		}
	}
	
	public partial class proc_retrieveCusNICResult
	{
		
		private string _cusNIC;
		
		public proc_retrieveCusNICResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cusNIC", DbType="VarChar(15)")]
		public string cusNIC
		{
			get
			{
				return this._cusNIC;
			}
			set
			{
				if ((this._cusNIC != value))
				{
					this._cusNIC = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
